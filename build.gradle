buildscript {
	repositories {
		mavenCentral()
	}
	ext{
		verifier_version = '2.1.0.RELEASE'
		springboot_version = '2.1.0.RELEASE'
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springboot_version}")
		classpath "org.springframework.cloud:spring-cloud-contract-gradle-plugin:${verifier_version}"
		classpath "com.jayway.restassured:rest-assured:2.5.0"
		classpath "com.jayway.restassured:spring-mock-mvc:2.5.0"
	}
}

plugins {
	id 'org.springframework.boot' version '2.1.3.RELEASE'
	id 'java'
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'groovy'
apply plugin: 'spring-cloud-contract'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

ext {
	set('springBootAdminVersion', '2.1.3')
	set('verifier_version', '2.1.0.RELEASE')
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'de.codecentric:spring-boot-admin-starter-server'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor "org.projectlombok:lombok"

	testCompile 'org.codehaus.groovy:groovy-all:2.4.6'
	// example with adding Spock core and Spock Spring
	testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
	testCompile 'org.spockframework:spock-spring:1.0-groovy-2.4'
	testCompile 'org.springframework.cloud:spring-cloud-starter-contract-verifier'
	testCompile 'org.springframework.cloud:spring-cloud-starter-contract-stub-runner'

	testCompile "com.jayway.restassured:rest-assured:2.5.0"
	testCompile "com.jayway.restassured:spring-mock-mvc:2.5.0"

	testCompile("org.springframework.restdocs:spring-restdocs-mockmvc")
	testCompile("org.springframework.cloud:spring-cloud-contract-wiremock")
	testCompile("org.springframework.cloud:spring-cloud-starter-contract-verifier")

	runtimeOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'

}

dependencyManagement {
	imports {
		mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-contract-dependencies:${verifier_version}"

	}
}


contracts{
    testMode = 'MockMvc'
//	packageWithBaseClasses = 'com.example.demo'
	baseClassForTests = 'com.example.demo.BaseClassForVerifier'
}


task stubsJar(type: Jar) {
    classifier = "stubs"

    into("META-INF/${project.group}/${project.name}/${project.version}/mappings") {
        include('**/*.*')
        from("${project.rootDir}/build/generated-snippets/stubs",
                "${project.rootDir}/build/stubs/META-INF/${project.group}/${project.name}/${project.version}/mappings")
    }

    into("META-INF/${project.group}/${project.name}/${project.version}/contracts") {
        include('**/*.*')
        from("${project.rootDir}/build/generated-snippets/contracts", "${project.rootDir}/src/test/resources/contracts")
    }
}

stubsJar.mustRunAfter(generateClientStubs)
stubsJar.dependsOn(test)
verifierStubsJar.enabled = false


artifacts {

   archives stubsJar
}
