buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.0.RELEASE")
	}
}

plugins {
	id 'org.springframework.boot' version '2.1.3.RELEASE'
	id 'java'
}

apply plugin: 'io.spring.dependency-management'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

ext {
	set('springBootAdminVersion', '2.1.3')
	set('springCloudContractVersion', '2.1.0.RELEASE')
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'de.codecentric:spring-boot-admin-starter-server'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor "org.projectlombok:lombok"
}

dependencyManagement {
	imports {
		mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-contract-dependencies:${springCloudContractVersion}"

	}
}


contracts{
    baseClassForTests = 'com.example.demo.BaseMockMvcSpec'
    testMode = 'MockMvc'
}


task stubsJar(type: Jar) {
    classifier = "stubs"

    into("META-INF/${project.group}/${project.name}/${project.version}/mappings") {
        include('**/*.*')
        from("${project.rootDir}/build/generated-snippets/stubs",
                "${project.rootDir}/build/stubs/META-INF/${project.group}/${project.name}/${project.version}/mappings")
    }

    into("META-INF/${project.group}/${project.name}/${project.version}/contracts") {
        include('**/*.*')
        from("${project.rootDir}/build/generated-snippets/contracts", "${project.rootDir}/src/test/resources/contracts")
    }
}

stubsJar.mustRunAfter(generateClientStubs)
stubsJar.dependsOn(test)
verifierStubsJar.enabled = true


artifacts {

   archives stubsJar
}
